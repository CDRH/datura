# compatible with Apium v2.0
settings:
  analysis:
    char_filter:
      escapes:
        type: mapping
        mappings:
          - "<em> => "
          - "</em> => "
          - "<u> => "
          - "</u> => "
          - "<strong> => "
          - "</strong> => "
          - "- => "
          - "& => "
          - ": => "
          - "; => "
          - ", => "
          - ". => "
          - "$ => "
          - "@ => "
          - "~ => "
          - "\" => "
          - "' => "
          - "[ => "
          - "] => "
    normalizer:
      keyword_normalized:
        type: custom
        char_filter:
          - escapes
        filter:
          - asciifolding
          - lowercase
mappings:
  properties:
    identifier:
      type: keyword
      normalizer: keyword_normalized
    cdrhCollection:
      type: keyword
      normalizer: keyword_normalized
    cdrhCollectionDesc:
      type: keyword
      normalizer: keyword_normalized
    cdrhUri:
      type: keyword
      normalizer: keyword_normalized
    cdrhUriData:
      type: keyword
      normalizer: keyword_normalized
    cdrhUriHtml:
      type: keyword
      normalizer: keyword_normalized
    cdrhDataType:
      type: keyword
      normalizer: keyword_normalized
    cdrhFigLocation:
      type: keyword
      normalizer: keyword_normalized
    # image_location: TODO how is this field handled? is it same as above?
    #   type: keyword
    #   normalizer: keyword_normalized
    cdrhCoverImage:
      type: keyword
      normalizer: keyword_normalized
      # TODO copy to text?
    dcTitle:
      type: keyword
      normalizer: keyword_normalized
    title_sort:
      type: keyword
      normalizer: keyword_normalized
      # TODO copy to text?
    dctermsAlternative:
      type: keyword
      normalizer: keyword_normalized
    cdrhDateUpdated:
      type: keyword
      normalizer: keyword_normalized
    creator_sort:
      type: keyword
      normalizer: keyword_normalized
    creator:
      type: nested
      properties:
        name:
          # TODO copy into text?
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
    dctermsSubjects:
      type: keyword
      normalizer: keyword_normalized
      # TODO not sure yet if for display or search
    dctermsAbstract:
      type: keyword
      normalizer: keyword_normalized
      # TODO copy to text?
    dctermsDescription:
      type: keyword
      normalizer: keyword_normalized
    publisher:
      type: keyword
      normalizer: keyword_normalized
    contributor:
      type: nested
      properties:
        name:
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
        role:
          type: keyword
          normalizer: keyword_normalized
    date_sort:
      type: date
      format: "yyyy-MM-dd||epoch_millis"
      # ignore_malformed: true
    date_display:
      type: keyword
      normalizer: keyword_normalized
    date_not_before:
      type: date
      format: "yyyy-MM-dd||epoch_millis"
      # ignore_malformed: true
    date_not_after:
      type: date
      format: "yyyy-MM-dd||epoch_millis"
      # ignore_malformed: true
    type:
      type: keyword
      normalizer: keyword_normalized
    format:
      type: keyword
      normalizer: keyword_normalized
    medium:
      type: keyword
      normalizer: keyword_normalized
    extent:
      type: keyword
      normalizer: keyword_normalized
    language:
      type: keyword
      normalizer: keyword_normalized
    languages:
      type: keyword
      normalizer: keyword_normalized
    dctermsRelation:
      type: keyword
      normalizer: keyword_normalized
    dctermsSource:
      type: keyword
      normalizer: keyword_normalized
    rdf:
      type: nested
      properties:
        type:
          type: keyword
          normalizer: keyword_normalized
        subject:
          type: keyword
          normalizer: keyword_normalized
        predicate:
          type: keyword
          normalizer: keyword_normalized
        object:
          type: keyword
          normalizer: keyword_normalized
        source:
          type: keyword
          normalizer: keyword_normalized
        note:
          type: keyword  
          normalizer: keyword_normalized
    recipient:
      type: nested
      properties:
        name:
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
        role:
          type: keyword
          normalizer: keyword_normalized
    rights_holder:
      type: keyword
      normalizer: keyword_normalized
    rights:
      type: keyword
      normalizer: keyword_normalized
    rights_uri:
      type: keyword
      normalizer: keyword_normalized
    spatial:
      type: nested
      properties:
        # display title for entire location
        title:
          type: keyword
          normalizer: keyword_normalized
        place_name:
          # TODO copy into text?
          type: keyword
          normalizer: keyword_normalized
        coordinates:
          type: geo_point
        id:
          type: keyword
          normalizer: keyword_normalized
        city:
          type: keyword
          normalizer: keyword_normalized
        county:
          type: keyword
          normalizer: keyword_normalized
        country:
          type: keyword
          normalizer: keyword_normalized
        region:
          type: keyword
          normalizer: keyword_normalized
        state:
          type: keyword
          normalizer: keyword_normalized
        street:
          type: keyword
          normalizer: keyword_normalized
        postal_code:
          type: keyword
          normalizer: keyword_normalized        
        township:
          type: keyword
          normalizer: keyword_normalized        
        note:
          type: keyword
          normalizer: keyword_normalized
        role:
          type: keyword
          normalizer: keyword_normalized
        description:
          type: keyword
          normalizer: keyword_normalized
        type:
          type: keyword
          normalizer: keyword_normalized
    person:
      type: nested
      properties:
        name:
          # TODO copy into text?
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
        role:
          type: keyword
          normalizer: keyword_normalized
    annotations_text:
      type: text
      analyzer: english
    cdrhCategory1:
      type: keyword
      normalizer: keyword_normalized
    cdrhCategory2:
      type: keyword
      normalizer: keyword_normalized
    cdrhCategory3:
      type: keyword
      normalizer: keyword_normalized
    cdrhCategory4:
      type: keyword
      normalizer: keyword_normalized
    cdrhCategory5:
      type: keyword
      normalizer: keyword_normalized
    cdrhNotes:
      type: keyword
      normalizer: keyword_normalized
    cdrhTopics:
      type: keyword
      normalizer: keyword_normalized
    cdrhKeywords1:
      type: keyword
      normalizer: keyword_normalized
    cdrhKeywords2:
      type: keyword
      normalizer: keyword_normalized
    cdrhKeywords3:
      type: keyword
      normalizer: keyword_normalized
    cdrhKeywords4:
      type: keyword
      normalizer: keyword_normalized
    people:
      type: keyword
      normalizer: keyword_normalized
    # places: #DEPRECATED
    #   type: keyword
    #   normalizer: keyword_normalized
    works:
      type: keyword
      normalizer: keyword_normalized
    citation:
      type: nested
      properties:
        role:
          type: keyword
          normalizer: keyword_normalized
        date:
          type: date
          format: "yyyy-MM-dd||epoch_millis"
        publisher:
          type: keyword
          normalizer: keyword_normalized
        issue:
          type: keyword
          normalizer: keyword_normalized
        page_begin:
          type: keyword
          normalizer: keyword_normalized
        page_end:
          type: keyword
          normalizer: keyword_normalized
        section:
          type: keyword
          normalizer: keyword_normalized
        volume:
          type: keyword
          normalizer: keyword_normalized
        place:
          type: keyword
          normalizer: keyword_normalized
        title_a:
          type: keyword
          normalizer: keyword_normalized
        title_m:
          type: keyword
          normalizer: keyword_normalized
        title_j:
          type: keyword
          normalizer: keyword_normalized
    date_created:
      type: date
      format: "yyyy-MM-dd||epoch_millis"
    text:
      type: text
      analyzer: english
  dynamic_templates:
    - date_fields:
        match: "*_d"
        mapping:
          type: date
          format: "yyyy-MM-dd||epoch_millis"
    - integer_fields:
        match: "*_i"
        mapping:
          type: integer
    - keyword_fields:
        match: "*_k"
        mapping:
          type: keyword
          normalizer: keyword_normalized
    - nested_fields:
        match: "*_n"
        mapping:
          type: nested
    - text_fields:
        match: "*_t"
        mapping:
          type: text
          analyzer: english
    # language fields are always text fields
    # but specifying _t_ for clarity
    # _t_en functionally the same as _t
    - text_english:
        match: "*_t_en"
        mapping:
          type: text
          analyzer: english
    - text_spanish:
        match: "*_t_es"
        mapping:
          type: text
          analyzer: spanish
