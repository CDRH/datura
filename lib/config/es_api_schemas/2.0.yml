# compatible with Apium v2.0
settings:
  analysis:
    char_filter:
      escapes:
        type: mapping
        mappings:
          - "<em> => "
          - "</em> => "
          - "<u> => "
          - "</u> => "
          - "<strong> => "
          - "</strong> => "
          - "- => "
          - "& => "
          - ": => "
          - "; => "
          - ", => "
          - ". => "
          - "$ => "
          - "@ => "
          - "~ => "
          - "\" => "
          - "' => "
          - "[ => "
          - "] => "
    normalizer:
      keyword_normalized:
        type: custom
        char_filter:
          - escapes
        filter:
          - asciifolding
          - lowercase
mappings:
  properties:
    identifier:
      type: keyword
      normalizer: keyword_normalized
    collection:
      type: keyword
      normalizer: keyword_normalized
    collection_desc:
      type: keyword
      normalizer: keyword_normalized
    uri:
      type: keyword
      normalizer: keyword_normalized
    uri_data:
      type: keyword
      normalizer: keyword_normalized
    uri_html:
      type: keyword
      normalizer: keyword_normalized
    data_type:
      type: keyword
      normalizer: keyword_normalized
    image_location:
      type: keyword
      normalizer: keyword_normalized
    image_id:
      type: keyword
      normalizer: keyword_normalized
      # TODO copy to text?
    title:
      type: keyword
      normalizer: keyword_normalized
    title_sort:
      type: keyword
      normalizer: keyword_normalized
      # TODO copy to text?
    alternative:
      type: keyword
      normalizer: keyword_normalized
    creator_sort:
      type: keyword
      normalizer: keyword_normalized
    creator:
      type: nested
      properties:
        name:
          # TODO copy into text?
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
    subjects:
      type: keyword
      normalizer: keyword_normalized
      # TODO not sure yet if for display or search
    abstract:
      type: keyword
      normalizer: keyword_normalized
      # TODO copy to text?
    description:
      type: keyword
      normalizer: keyword_normalized
    publisher:
      type: keyword
      normalizer: keyword_normalized
    contributor:
      type: nested
      properties:
        name:
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
        role:
          type: keyword
          normalizer: keyword_normalized
    date:
      type: date
      format: "yyyy-MM-dd||epoch_millis"
      # ignore_malformed: true
    date_display:
      type: keyword
      normalizer: keyword_normalized
    date_not_before:
      type: date
      format: "yyyy-MM-dd||epoch_millis"
      # ignore_malformed: true
    date_not_after:
      type: date
      format: "yyyy-MM-dd||epoch_millis"
      # ignore_malformed: true
    type:
      type: keyword
      normalizer: keyword_normalized
    format:
      type: keyword
      normalizer: keyword_normalized
    medium:
      type: keyword
      normalizer: keyword_normalized
    extent:
      type: keyword
      normalizer: keyword_normalized
    language:
      type: keyword
      normalizer: keyword_normalized
    languages:
      type: keyword
      normalizer: keyword_normalized
    relation:
      type: keyword
      normalizer: keyword_normalized
    source:
      type: keyword
      normalizer: keyword_normalized
    recipient:
      type: nested
      properties:
        name:
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
        role:
          type: keyword
          normalizer: keyword_normalized
    rights_holder:
      type: keyword
      normalizer: keyword_normalized
    rights:
      type: keyword
      normalizer: keyword_normalized
    rights_uri:
      type: keyword
      normalizer: keyword_normalized
    coverage-spatial:
      type: nested
      properties:
        place_name:
          # TODO copy into text?
          type: keyword
          normalizer: keyword_normalized
        coordinates:
          type: geo_point
        id:
          type: keyword
          normalizer: keyword_normalized
        city:
          type: keyword
          normalizer: keyword_normalized
        county:
          type: keyword
          normalizer: keyword_normalized
        country:
          type: keyword
          normalizer: keyword_normalized
        region:
          type: keyword
          normalizer: keyword_normalized
        state:
          type: keyword
          normalizer: keyword_normalized
        street:
          type: keyword
          normalizer: keyword_normalized
        postal_code:
          type: keyword
          normalizer: keyword_normalized
    person:
      type: nested
      properties:
        name:
          # TODO copy into text?
          type: keyword
          normalizer: keyword_normalized
        id:
          type: keyword
          normalizer: keyword_normalized
        role:
          type: keyword
          normalizer: keyword_normalized
    annotations_text:
      type: text
      analyzer: english
    category:
      type: keyword
      normalizer: keyword_normalized
    subcategory:
      type: keyword
      normalizer: keyword_normalized
    topics:
      type: keyword
      normalizer: keyword_normalized
    keywords:
      type: keyword
      normalizer: keyword_normalized
    people:
      type: keyword
      normalizer: keyword_normalized
    places:
      type: keyword
      normalizer: keyword_normalized
    works:
      type: keyword
      normalizer: keyword_normalized
    text:
      type: text
      analyzer: english
  dynamic_templates:
    - date_fields:
        match: "*_d"
        mapping:
          type: date
          format: "yyyy-MM-dd||epoch_millis"
    - integer_fields:
        match: "*_i"
        mapping:
          type: integer
    - keyword_fields:
        match: "*_k"
        mapping:
          type: keyword
          normalizer: keyword_normalized
    - text_fields:
        match: "*_t"
        mapping:
          type: text
          analyzer: english
    # language fields are always text fields
    # but specifying _t_ for clarity
    # _t_en functionally the same as _t
    - text_english:
        match: "*_t_en"
        mapping:
          type: text
          analyzer: english
    - text_spanish:
        match: "*_t_es"
        mapping:
          type: text
          analyzer: spanish
